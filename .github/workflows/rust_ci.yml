name: Continuous Integration

on:
  push:
    paths-ignore:
      - "**/README.md"
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  rust-checks:
    name: Rust Checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        action:
          - command: build
            args: --release
          - command: fmt
            args: --all -- --check --color always
          - command: clippy
            args: --workspace -- -D warnings
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: esp32
          ldproxy: true
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
      - name: Create dummy config.yml
        run: |
          cat << EOF > config.yml
          mqtt_endpoint: mqtt://nowhere.arpa
          availability_topic: none
          ota_topic: none
          entities:
            - name: Dummy alarm
              variant: alarm_control_panel
              unique_id: dummy_alarm_control
              state_topic: dummy_alarm/state
              command_topic: dummy_alarm/command
              device: &device
                identifiers: ["dummy_alarm"]
                name: Dummy Alarm
            - name: Dummy Hall motion
              variant: binary_sensor
              unique_id: hall_motion
              state_topic: dummy_alarm/hall_motion
              device: *device
              icon: mdi:walk
              gpio_pin: 0
          EOF
      - name: Run command
        run: cargo ${{ matrix.action.command }} ${{ matrix.action.args }}
